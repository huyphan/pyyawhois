
# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   spec/fixtures/responses/whois.nic.design/design/status_registered
#
# and regenerate the tests with the following script
#
#   $ scripts/generate_tests.py
#

from nose.tools import *
from dateutil.parser import parse as time_parse
import yawhois

class TestWhoisNicDesignDesignStatusRegistered(object):

    def setUp(self):
        fixture_path = "spec/fixtures/responses/whois.nic.design/design/status_registered.txt"
        host         = "whois.nic.design"
        part         = yawhois.record.Part(open(fixture_path, "r").read(), host)
        self.record  = yawhois.record.Record(None, [part])

    def test_status(self):
        eq_(self.record.status, ["ok"])

    def test_available(self):
        eq_(self.record.available, False)

    def test_domain(self):
        eq_(self.record.domain, "toplevel.design")

    def test_nameservers(self):
        eq_(self.record.nameservers.__class__.__name__, 'list')
        eq_(len(self.record.nameservers), 4)
        eq_(self.record.nameservers[0].__class__.__name__, 'Nameserver')
        eq_(self.record.nameservers[0].name, "ns-170.awsdns-21.com")
        eq_(self.record.nameservers[0].ipv4, None)
        eq_(self.record.nameservers[0].ipv6, None)
        eq_(self.record.nameservers[1].__class__.__name__, 'Nameserver')
        eq_(self.record.nameservers[1].name, "ns-904.awsdns-49.net")
        eq_(self.record.nameservers[1].ipv4, None)
        eq_(self.record.nameservers[1].ipv6, None)
        eq_(self.record.nameservers[2].__class__.__name__, 'Nameserver')
        eq_(self.record.nameservers[2].name, "ns-1067.awsdns-05.org")
        eq_(self.record.nameservers[2].ipv4, None)
        eq_(self.record.nameservers[2].ipv6, None)
        eq_(self.record.nameservers[3].__class__.__name__, 'Nameserver')
        eq_(self.record.nameservers[3].name, "ns-1873.awsdns-42.co.uk")
        eq_(self.record.nameservers[3].ipv4, None)
        eq_(self.record.nameservers[3].ipv6, None)

    def test_admin_contacts(self):
        eq_(self.record.admin_contacts.__class__.__name__, 'list')
        eq_(len(self.record.admin_contacts), 1)
        eq_(self.record.admin_contacts[0].__class__.__name__, 'Contact')
        eq_(self.record.admin_contacts[0].type, yawhois.record.Contact.TYPE_ADMINISTRATIVE)
        eq_(self.record.admin_contacts[0].id, "H4596017")
        eq_(self.record.admin_contacts[0].name, "Domain Administrator")
        eq_(self.record.admin_contacts[0].organization, "Top Level Design, LLC")
        eq_(self.record.admin_contacts[0].address, "742 Ocean Club Place")
        eq_(self.record.admin_contacts[0].city, "Fernandina Beach")
        eq_(self.record.admin_contacts[0].zip, "32034")
        eq_(self.record.admin_contacts[0].state, "Florida")
        eq_(self.record.admin_contacts[0].country, None)
        eq_(self.record.admin_contacts[0].country_code, "US")
        eq_(self.record.admin_contacts[0].phone, "+1.5038888808")
        eq_(self.record.admin_contacts[0].fax, "+1.6788841468")
        eq_(self.record.admin_contacts[0].email, "ray@tldesign.co")

    def test_registered(self):
        eq_(self.record.registered, True)

    def test_created_on(self):
        eq_(self.record.created_on.__class__.__name__, 'datetime')
        eq_(self.record.created_on, time_parse('2015-02-27 16:08:32 UTC'))

    def test_registrar(self):
        eq_(self.record.registrar.__class__.__name__, 'Registrar')
        eq_(self.record.registrar.id, "9999")
        eq_(self.record.registrar.name, "Top Level Design, LLC")
        eq_(self.record.registrar.organization, None)
        eq_(self.record.registrar.url, None)

    def test_registrant_contacts(self):
        eq_(self.record.registrant_contacts.__class__.__name__, 'list')
        eq_(len(self.record.registrant_contacts), 1)
        eq_(self.record.registrant_contacts[0].__class__.__name__, 'Contact')
        eq_(self.record.registrant_contacts[0].type, yawhois.record.Contact.TYPE_REGISTRANT)
        eq_(self.record.registrant_contacts[0].id, "H4596017")
        eq_(self.record.registrant_contacts[0].name, "Domain Administrator")
        eq_(self.record.registrant_contacts[0].organization, "Top Level Design, LLC")
        eq_(self.record.registrant_contacts[0].address, "742 Ocean Club Place")
        eq_(self.record.registrant_contacts[0].city, "Fernandina Beach")
        eq_(self.record.registrant_contacts[0].zip, "32034")
        eq_(self.record.registrant_contacts[0].state, "Florida")
        eq_(self.record.registrant_contacts[0].country, None)
        eq_(self.record.registrant_contacts[0].country_code, "US")
        eq_(self.record.registrant_contacts[0].phone, "+1.5038888808")
        eq_(self.record.registrant_contacts[0].fax, "+1.6788841468")
        eq_(self.record.registrant_contacts[0].email, "ray@tldesign.co")

    def test_technical_contacts(self):
        eq_(self.record.technical_contacts.__class__.__name__, 'list')
        eq_(len(self.record.technical_contacts), 1)
        eq_(self.record.technical_contacts[0].__class__.__name__, 'Contact')
        eq_(self.record.technical_contacts[0].type, yawhois.record.Contact.TYPE_TECHNICAL)
        eq_(self.record.technical_contacts[0].id, "H4596017")
        eq_(self.record.technical_contacts[0].name, "Domain Administrator")
        eq_(self.record.technical_contacts[0].organization, "Top Level Design, LLC")
        eq_(self.record.technical_contacts[0].address, "742 Ocean Club Place")
        eq_(self.record.technical_contacts[0].city, "Fernandina Beach")
        eq_(self.record.technical_contacts[0].zip, "32034")
        eq_(self.record.technical_contacts[0].state, "Florida")
        eq_(self.record.technical_contacts[0].country, None)
        eq_(self.record.technical_contacts[0].country_code, "US")
        eq_(self.record.technical_contacts[0].phone, "+1.5038888808")
        eq_(self.record.technical_contacts[0].fax, "+1.6788841468")
        eq_(self.record.technical_contacts[0].email, "ray@tldesign.co")

    def test_updated_on(self):
        eq_(self.record.updated_on.__class__.__name__, 'datetime')
        eq_(self.record.updated_on, time_parse('2015-04-21 17:48:34 UTC'))

    def test_domain_id(self):
        eq_(self.record.domain_id, "D7069819-CNIC")

    def test_expires_on(self):
        eq_(self.record.expires_on.__class__.__name__, 'datetime')
        eq_(self.record.expires_on, time_parse('2016-02-27 23:59:59 UTC'))

    def test_disclaimer(self):
        eq_(self.record.disclaimer, "Access to the whois service is rate limited. For more information, please see https://registrar-console.centralnic.com/pub/whois_guidance.")
