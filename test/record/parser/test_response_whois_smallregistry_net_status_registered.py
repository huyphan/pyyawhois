
# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   spec/fixtures/responses/whois.smallregistry.net/status_registered
#
# and regenerate the tests with the following script
#
#   $ scripts/generate_tests.py
#

from nose.tools import *
from dateutil.parser import parse as time_parse
import yawhois

class TestWhoisSmallregistryNetStatusRegistered(object):

    def setUp(self):
        fixture_path = "spec/fixtures/responses/whois.smallregistry.net/status_registered.txt"
        host         = "whois.smallregistry.net"
        part         = yawhois.record.Part(open(fixture_path, "r").read(), host)
        self.record  = yawhois.record.Record(None, [part])

    def test_status(self):
        eq_(self.record.status, 'registered')

    def test_available(self):
        eq_(self.record.available, False)

    def test_domain(self):
        eq_(self.record.domain, "dr-foo-bar-baz.chirurgiens-dentistes.fr")

    def test_nameservers(self):
        eq_(self.record.nameservers.__class__.__name__, 'list')
        eq_(len(self.record.nameservers), 4)
        eq_(self.record.nameservers[0].__class__.__name__, 'Nameserver')
        eq_(self.record.nameservers[0].name, "ns1.google.com")
        eq_(self.record.nameservers[1].__class__.__name__, 'Nameserver')
        eq_(self.record.nameservers[1].name, "ns2.google.com")
        eq_(self.record.nameservers[2].__class__.__name__, 'Nameserver')
        eq_(self.record.nameservers[2].name, "ns3.google.com")
        eq_(self.record.nameservers[3].__class__.__name__, 'Nameserver')
        eq_(self.record.nameservers[3].name, "ns4.google.com")

    def test_admin_contacts(self):
        eq_(self.record.admin_contacts.__class__.__name__, 'list')
        eq_(len(self.record.admin_contacts), 1)
        eq_(self.record.admin_contacts[0].__class__.__name__, 'Contact')
        eq_(self.record.admin_contacts[0].type, yawhois.record.Contact.TYPE_ADMINISTRATIVE)
        eq_(self.record.admin_contacts[0].id, "QR1-SMALL")
        eq_(self.record.admin_contacts[0].name, None)
        eq_(self.record.admin_contacts[0].organization, "QWE RTY")
        eq_(self.record.admin_contacts[0].address, "13 RUE DE LA PAIX\n75003 PARIS\nFRANCE")
        eq_(self.record.admin_contacts[0].phone, "+33.144887967")
        eq_(self.record.admin_contacts[0].updated_on, time_parse('2010-08-02 14:48:21 +02:00'))

    def test_registered(self):
        eq_(self.record.registered, True)

    def test_created_on(self):
        eq_(self.record.created_on.__class__.__name__, 'datetime')
        eq_(self.record.created_on, time_parse('2011-01-13 15:45:18 +01:00'))

    def test_registrar(self):
        eq_(self.record.registrar.__class__.__name__, 'Registrar')
        eq_(self.record.registrar.id, None)
        eq_(self.record.registrar.name, "GOOGLE")
        eq_(self.record.registrar.organization, "GOOGLE")
        eq_(self.record.registrar.url, "http://www.google.com")

    def test_registrant_contacts(self):
        eq_(self.record.registrant_contacts.__class__.__name__, 'list')
        eq_(len(self.record.registrant_contacts), 1)
        eq_(self.record.registrant_contacts[0].__class__.__name__, 'Contact')
        eq_(self.record.registrant_contacts[0].type, yawhois.record.Contact.TYPE_REGISTRANT)
        eq_(self.record.registrant_contacts[0].id, "FBB1-SMALL")
        eq_(self.record.registrant_contacts[0].name, "FOO BAR BAZ")
        eq_(self.record.registrant_contacts[0].organization, "FOO BAR BAZ INC")
        eq_(self.record.registrant_contacts[0].address, "116 RUE DE LA PAIX\n75001 PARIS\nFRANCE")
        eq_(self.record.registrant_contacts[0].phone, "+33.123456651")
        eq_(self.record.registrant_contacts[0].fax, "+33.123456660")
        eq_(self.record.registrant_contacts[0].updated_on, time_parse('2011-01-13 15:45:18 +01:00'))

    def test_technical_contacts(self):
        eq_(self.record.technical_contacts.__class__.__name__, 'list')
        eq_(len(self.record.technical_contacts), 1)
        eq_(self.record.technical_contacts[0].__class__.__name__, 'Contact')
        eq_(self.record.technical_contacts[0].type, yawhois.record.Contact.TYPE_TECHNICAL)
        eq_(self.record.technical_contacts[0].id, "GOOG-SMALL")
        eq_(self.record.technical_contacts[0].name, None)
        eq_(self.record.technical_contacts[0].organization, "GOOGLE DNS MASTER")
        eq_(self.record.technical_contacts[0].address, "GOOGLE\n22, RUE DE LA PAIX\n75008 PARIS\nFRANCE")
        eq_(self.record.technical_contacts[0].phone, "+33.821845353")
        eq_(self.record.technical_contacts[0].fax, "+33.821845354")
        eq_(self.record.technical_contacts[0].updated_on, time_parse('2011-05-18 09:35:37 +02:00'))

    def test_updated_on(self):
        eq_(self.record.updated_on.__class__.__name__, 'datetime')
        eq_(self.record.updated_on, time_parse('2012-01-13 16:00:09 +01:00'))

    def test_domain_id(self):
        assert_raises(yawhois.exceptions.AttributeNotSupported, self.record.domain_id)

    def test_expires_on(self):
        eq_(self.record.expires_on.__class__.__name__, 'datetime')
        eq_(self.record.expires_on, time_parse('2013-01-13 15:45:18 +01:00'))

    def test_disclaimer(self):
        eq_(self.record.disclaimer, "Welcome to the SMALLREGISTRY WHOIS Server. Datas are available in order to supply you with information purpose only, PROMOPIXEL is not responsible for its accuracy. Copy of whole or part of the data without permission from PROMOPIXEL is strictly forbidden. The sole owner of a domain is the entity described in the relevant \"registrant:\" record. Domain or subdomain ownership disputes should be settled by contacting SMALLREGISTRY registry: https://www.smallregistry.net, or PROMOPIXEL: http://www.promopixel.com\nBienvenue sur le serveur WHOIS de SMALLREGISTRY. Les données fournies sont disponibles à titre informatif uniquement, PROMOPIXEL ne garantit pas leurs exactitudes. La copie de tout ou partie de la base de données est interdite sans l'autorisation expresse de PROMOPIXEL. Le seul propriétaire d'un domaine ou d'un sous-domaine est l'entité décrite dans l’enregistrement \"registrant:\" correspondant. Un différent sur la propriété d'un nom de domaine ou de sous-domaine peut être réglé en contactant le registre SMALLREGISTRY: https://www.smallregistry.net, ou PROMOPIXEL: http://www.promopixel.com")
