
# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   spec/fixtures/responses/whois.centralnic.com/jp.net/status_registered
#
# and regenerate the tests with the following script
#
#   $ scripts/generate_tests.py
#

from nose.tools import *
from dateutil.parser import parse as time_parse
import yawhois

class TestWhoisCentralnicComJpNetStatusRegistered(object):

    def setUp(self):
        fixture_path = "spec/fixtures/responses/whois.centralnic.com/jp.net/status_registered.txt"
        host         = "whois.centralnic.com"
        part         = yawhois.record.Part(open(fixture_path, "r").read(), host)
        self.record  = yawhois.record.Record(None, [part])

    def test_status(self):
        eq_(self.record.status, ["ok"])

    def test_available(self):
        eq_(self.record.available, False)

    def test_domain(self):
        eq_(self.record.domain, "ntt.jp.net")

    def test_nameservers(self):
        eq_(self.record.nameservers.__class__.__name__, 'list')
        eq_(len(self.record.nameservers), 2)
        eq_(self.record.nameservers[0].__class__.__name__, 'Nameserver')
        eq_(self.record.nameservers[0].name, "dns1.onamae.com")
        eq_(self.record.nameservers[1].__class__.__name__, 'Nameserver')
        eq_(self.record.nameservers[1].name, "dns2.onamae.com")

    def test_admin_contacts(self):
        eq_(self.record.admin_contacts.__class__.__name__, 'list')
        eq_(len(self.record.admin_contacts), 1)
        eq_(self.record.admin_contacts[0].__class__.__name__, 'Contact')
        eq_(self.record.admin_contacts[0].type, yawhois.record.Contact.TYPE_ADMINISTRATIVE)
        eq_(self.record.admin_contacts[0].id, "136151BD1A1")
        eq_(self.record.admin_contacts[0].name, "zhijian xia")
        eq_(self.record.admin_contacts[0].organization, "zhijian xia")
        eq_(self.record.admin_contacts[0].address, "Chuo\n3-23-20")
        eq_(self.record.admin_contacts[0].city, "Warabi-shi")
        eq_(self.record.admin_contacts[0].zip, "335-0004")
        eq_(self.record.admin_contacts[0].state, "Saitama")
        eq_(self.record.admin_contacts[0].country, None)
        eq_(self.record.admin_contacts[0].country_code, "JP")
        eq_(self.record.admin_contacts[0].phone, "+81.08037215656")
        eq_(self.record.admin_contacts[0].fax, None)
        eq_(self.record.admin_contacts[0].email, "xia@ingame.jp")

    def test_registered(self):
        eq_(self.record.registered, True)

    def test_created_on(self):
        eq_(self.record.created_on.__class__.__name__, 'datetime')
        eq_(self.record.created_on, time_parse('2012-03-16 11:47:23 UTC'))

    def test_registrar(self):
        eq_(self.record.registrar.__class__.__name__, 'Registrar')
        eq_(self.record.registrar.id, "H1605993")
        eq_(self.record.registrar.name, None)
        eq_(self.record.registrar.organization, "GMO")
        eq_(self.record.registrar.url, "http://www.onamae.com")

    def test_registrant_contacts(self):
        eq_(self.record.registrant_contacts.__class__.__name__, 'list')
        eq_(len(self.record.registrant_contacts), 1)
        eq_(self.record.registrant_contacts[0].__class__.__name__, 'Contact')
        eq_(self.record.registrant_contacts[0].type, yawhois.record.Contact.TYPE_REGISTRANT)
        eq_(self.record.registrant_contacts[0].id, "136151BCEFE")
        eq_(self.record.registrant_contacts[0].name, "zhijian xia")
        eq_(self.record.registrant_contacts[0].organization, "zhijian xia")
        eq_(self.record.registrant_contacts[0].address, "Chuo\n3-23-20")
        eq_(self.record.registrant_contacts[0].city, "Warabi-shi")
        eq_(self.record.registrant_contacts[0].zip, "335-0004")
        eq_(self.record.registrant_contacts[0].state, "Saitama")
        eq_(self.record.registrant_contacts[0].country, None)
        eq_(self.record.registrant_contacts[0].country_code, "JP")
        eq_(self.record.registrant_contacts[0].phone, "+81.08037215656")
        eq_(self.record.registrant_contacts[0].fax, None)
        eq_(self.record.registrant_contacts[0].email, "xia@ingame.jp")

    def test_technical_contacts(self):
        eq_(self.record.technical_contacts.__class__.__name__, 'list')
        eq_(len(self.record.technical_contacts), 1)
        eq_(self.record.technical_contacts[0].__class__.__name__, 'Contact')
        eq_(self.record.technical_contacts[0].type, yawhois.record.Contact.TYPE_TECHNICAL)
        eq_(self.record.technical_contacts[0].id, "136151BD459")
        eq_(self.record.technical_contacts[0].name, "Technical Contact")
        eq_(self.record.technical_contacts[0].organization, "GMO Internet Inc.")
        eq_(self.record.technical_contacts[0].address, "26-1 Sakuragaoka-cho\nCerulean Tower 11F")
        eq_(self.record.technical_contacts[0].city, "Shibuya-ku")
        eq_(self.record.technical_contacts[0].zip, "150-8512")
        eq_(self.record.technical_contacts[0].state, "Tokyo")
        eq_(self.record.technical_contacts[0].country, None)
        eq_(self.record.technical_contacts[0].country_code, "JP")
        eq_(self.record.technical_contacts[0].phone, "+81.0354562555")
        eq_(self.record.technical_contacts[0].fax, "+81.0354562556")
        eq_(self.record.technical_contacts[0].email, "admin@onamae.com")

    def test_updated_on(self):
        eq_(self.record.updated_on.__class__.__name__, 'datetime')
        eq_(self.record.updated_on, time_parse('2013-01-24 16:57:19 UTC'))

    def test_domain_id(self):
        eq_(self.record.domain_id, "CNIC-DO846061")

    def test_expires_on(self):
        eq_(self.record.expires_on.__class__.__name__, 'datetime')
        eq_(self.record.expires_on, time_parse('2018-03-16 23:59:59 UTC'))

    def test_disclaimer(self):
        eq_(self.record.disclaimer, "This whois service is provided by CentralNic Ltd and only contains information pertaining to Internet domain names we have registered for our customers. By using this service you are agreeing (1) not to use any information presented here for any purpose other than determining ownership of domain names, (2) not to store or reproduce this data in any way, (3) not to use any high-volume, automated, electronic processes to obtain data from this service. Abuse of this service is monitored and actions in contravention of these terms will result in being permanently blacklisted. All data is (c) CentralNic Ltd https://www.centralnic.com/")
