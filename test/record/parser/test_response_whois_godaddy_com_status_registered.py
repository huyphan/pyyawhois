
# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   spec/fixtures/responses/whois.godaddy.com/status_registered
#
# and regenerate the tests with the following script
#
#   $ scripts/generate_tests.py
#

from nose.tools import *
from dateutil.parser import parse as time_parse
import yawhois

class TestWhoisGodaddyComStatusRegistered(object):

    def setUp(self):
        fixture_path = "spec/fixtures/responses/whois.godaddy.com/status_registered.txt"
        host         = "whois.godaddy.com"
        part         = yawhois.record.Part(open(fixture_path, "r").read(), host)
        self.record  = yawhois.record.Record(None, [part])

    def test_status(self):
        assert_raises(yawhois.exceptions.AttributeNotSupported, self.record.status)

    def test_available(self):
        eq_(self.record.available, False)

    def test_nameservers(self):
        eq_(self.record.nameservers.__class__.__name__, 'list')
        eq_(len(self.record.nameservers), 3)
        eq_(self.record.nameservers[0].__class__.__name__, 'Nameserver')
        eq_(self.record.nameservers[0].name, "CNS1.SECURESERVER.NET")
        eq_(self.record.nameservers[0].ipv4, None)
        eq_(self.record.nameservers[0].ipv6, None)
        eq_(self.record.nameservers[1].__class__.__name__, 'Nameserver')
        eq_(self.record.nameservers[1].name, "CNS2.SECURESERVER.NET")
        eq_(self.record.nameservers[1].ipv4, None)
        eq_(self.record.nameservers[1].ipv6, None)
        eq_(self.record.nameservers[2].__class__.__name__, 'Nameserver')
        eq_(self.record.nameservers[2].name, "CNS3.SECURESERVER.NET")
        eq_(self.record.nameservers[2].ipv4, None)
        eq_(self.record.nameservers[2].ipv6, None)

    def test_admin_contacts(self):
        eq_(self.record.admin_contacts.__class__.__name__, 'list')
        eq_(len(self.record.admin_contacts), 1)
        eq_(self.record.admin_contacts[0].__class__.__name__, 'Contact')
        eq_(self.record.admin_contacts[0].type, yawhois.record.Contact.TYPE_ADMINISTRATIVE)
        eq_(self.record.admin_contacts[0].name, "Go Daddy Go Daddy")
        eq_(self.record.admin_contacts[0].organization, "Go Daddy")
        eq_(self.record.admin_contacts[0].address, "14455 N Hayden Rd Suite 219")
        eq_(self.record.admin_contacts[0].city, "Scottsdale")
        eq_(self.record.admin_contacts[0].zip, "85260")
        eq_(self.record.admin_contacts[0].state, "Arizona")
        eq_(self.record.admin_contacts[0].country, "United States")
        eq_(self.record.admin_contacts[0].phone, "+1.4805058800")
        eq_(self.record.admin_contacts[0].fax, "+1.4805058844")
        eq_(self.record.admin_contacts[0].email, "dns@jomax.net")
        eq_(self.record.admin_contacts[0].created_on, None)
        eq_(self.record.admin_contacts[0].updated_on, None)

    def test_registered(self):
        eq_(self.record.registered, True)

    def test_registrar(self):
        eq_(self.record.registrar.__class__.__name__, 'Registrar')
        eq_(self.record.registrar.id, None)
        eq_(self.record.registrar.name, "GoDaddy.com, LLC")
        eq_(self.record.registrar.organization, None)
        eq_(self.record.registrar.url, "http://www.godaddy.com")

    def test_technical_contacts(self):
        eq_(self.record.technical_contacts.__class__.__name__, 'list')
        eq_(len(self.record.technical_contacts), 1)
        eq_(self.record.technical_contacts[0].__class__.__name__, 'Contact')
        eq_(self.record.technical_contacts[0].type, yawhois.record.Contact.TYPE_TECHNICAL)
        eq_(self.record.technical_contacts[0].name, "Go Daddy Go Daddy")
        eq_(self.record.technical_contacts[0].organization, "Go Daddy")
        eq_(self.record.technical_contacts[0].address, "14455 N Hayden Rd Suite 219")
        eq_(self.record.technical_contacts[0].city, "Scottsdale")
        eq_(self.record.technical_contacts[0].zip, "85260")
        eq_(self.record.technical_contacts[0].state, "Arizona")
        eq_(self.record.technical_contacts[0].country, "United States")
        eq_(self.record.technical_contacts[0].phone, "+1.4805058800")
        eq_(self.record.technical_contacts[0].fax, "+1.4805058844")
        eq_(self.record.technical_contacts[0].email, "dns@jomax.net")
        eq_(self.record.technical_contacts[0].created_on, None)
        eq_(self.record.technical_contacts[0].updated_on, None)

    def test_registrant_contacts(self):
        eq_(self.record.registrant_contacts.__class__.__name__, 'list')
        eq_(len(self.record.registrant_contacts), 1)
        eq_(self.record.registrant_contacts[0].__class__.__name__, 'Contact')
        eq_(self.record.registrant_contacts[0].type, yawhois.record.Contact.TYPE_REGISTRANT)
        eq_(self.record.registrant_contacts[0].name, "Go Daddy Go Daddy")
        eq_(self.record.registrant_contacts[0].organization, "Go Daddy")
        eq_(self.record.registrant_contacts[0].address, "14455 N Hayden Rd Suite 219")
        eq_(self.record.registrant_contacts[0].city, "Scottsdale")
        eq_(self.record.registrant_contacts[0].zip, "85260")
        eq_(self.record.registrant_contacts[0].state, "Arizona")
        eq_(self.record.registrant_contacts[0].country, "United States")
        eq_(self.record.registrant_contacts[0].phone, None)
        eq_(self.record.registrant_contacts[0].fax, None)
        eq_(self.record.registrant_contacts[0].email, None)
        eq_(self.record.registrant_contacts[0].created_on, None)
        eq_(self.record.registrant_contacts[0].updated_on, None)
