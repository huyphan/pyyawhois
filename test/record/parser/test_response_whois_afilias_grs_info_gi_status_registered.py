
# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   spec/fixtures/responses/whois.afilias-grs.info/gi/status_registered
#
# and regenerate the tests with the following script
#
#   $ scripts/generate_tests.py
#

from nose.tools import *
from dateutil.parser import parse as time_parse
import yawhois

class TestWhoisAfiliasGrsInfoGiStatusRegistered(object):

    def setUp(self):
        fixture_path = "spec/fixtures/responses/whois.afilias-grs.info/gi/status_registered.txt"
        host         = "whois.afilias-grs.info"
        part         = yawhois.record.Part(open(fixture_path, "r").read(), host)
        self.record  = yawhois.record.Record(None, [part])

    def test_status(self):
        eq_(self.record.status, ["OK"])

    def test_available(self):
        eq_(self.record.available, False)

    def test_domain(self):
        eq_(self.record.domain, "sapphire.gi")

    def test_nameservers(self):
        eq_(self.record.nameservers.__class__.__name__, 'list')
        eq_(len(self.record.nameservers), 2)
        eq_(self.record.nameservers[0].__class__.__name__, 'Nameserver')
        eq_(self.record.nameservers[0].name, "ns1-a.sapphire.gi")
        eq_(self.record.nameservers[1].__class__.__name__, 'Nameserver')
        eq_(self.record.nameservers[1].name, "ns2-a.sapphire.gi")

    def test_admin_contacts(self):
        eq_(self.record.admin_contacts.__class__.__name__, 'list')
        eq_(len(self.record.admin_contacts), 1)
        eq_(self.record.admin_contacts[0].__class__.__name__, 'Contact')
        eq_(self.record.admin_contacts[0].type, yawhois.record.Contact.TYPE_ADMINISTRATIVE)
        eq_(self.record.admin_contacts[0].id, "FR-1103549674779")
        eq_(self.record.admin_contacts[0].name, "Jimmy Imossi")
        eq_(self.record.admin_contacts[0].organization, "Broadband Gibraltar Limited")
        eq_(self.record.admin_contacts[0].address, "Suite 951\nEuroport")
        eq_(self.record.admin_contacts[0].city, "Gibraltar")
        eq_(self.record.admin_contacts[0].zip, "NA")
        eq_(self.record.admin_contacts[0].state, "")
        eq_(self.record.admin_contacts[0].country_code, "GI")
        eq_(self.record.admin_contacts[0].phone, "+350.47200")
        eq_(self.record.admin_contacts[0].fax, "+350.47272")
        eq_(self.record.admin_contacts[0].email, "jimossi@sapphire.gi")

    def test_registered(self):
        eq_(self.record.registered, True)

    def test_created_on(self):
        eq_(self.record.created_on.__class__.__name__, 'datetime')
        eq_(self.record.created_on, time_parse('2004-12-20 13:34:34 UTC'))

    def test_registrar(self):
        eq_(self.record.registrar.__class__.__name__, 'Registrar')
        eq_(self.record.registrar.id, "R43-LRCC")
        eq_(self.record.registrar.name, "GibNet Registrar")
        eq_(self.record.registrar.organization, None)
        eq_(self.record.registrar.url, None)

    def test_registrant_contacts(self):
        eq_(self.record.registrant_contacts.__class__.__name__, 'list')
        eq_(len(self.record.registrant_contacts), 1)
        eq_(self.record.registrant_contacts[0].__class__.__name__, 'Contact')
        eq_(self.record.registrant_contacts[0].type, yawhois.record.Contact.TYPE_REGISTRANT)
        eq_(self.record.registrant_contacts[0].id, "FR-1103549674779")
        eq_(self.record.registrant_contacts[0].name, "Jimmy Imossi")
        eq_(self.record.registrant_contacts[0].organization, "Broadband Gibraltar Limited")
        eq_(self.record.registrant_contacts[0].address, "Suite 951\nEuroport")
        eq_(self.record.registrant_contacts[0].city, "Gibraltar")
        eq_(self.record.registrant_contacts[0].zip, "NA")
        eq_(self.record.registrant_contacts[0].state, "")
        eq_(self.record.registrant_contacts[0].country_code, "GI")
        eq_(self.record.registrant_contacts[0].phone, "+350.47200")
        eq_(self.record.registrant_contacts[0].fax, "+350.47272")
        eq_(self.record.registrant_contacts[0].email, "jimossi@sapphire.gi")

    def test_technical_contacts(self):
        eq_(self.record.technical_contacts.__class__.__name__, 'list')
        eq_(len(self.record.technical_contacts), 1)
        eq_(self.record.technical_contacts[0].__class__.__name__, 'Contact')
        eq_(self.record.technical_contacts[0].type, yawhois.record.Contact.TYPE_TECHNICAL)
        eq_(self.record.technical_contacts[0].id, "FR-10a223e2e4cf0")
        eq_(self.record.technical_contacts[0].name, "Tech Dept")
        eq_(self.record.technical_contacts[0].organization, "Broadband Gibraltar Ltd")
        eq_(self.record.technical_contacts[0].address, "Suite 9.5.1\nEuroport")
        eq_(self.record.technical_contacts[0].city, "N/A")
        eq_(self.record.technical_contacts[0].zip, "N/A")
        eq_(self.record.technical_contacts[0].state, "")
        eq_(self.record.technical_contacts[0].country_code, "GI")
        eq_(self.record.technical_contacts[0].phone, "+350.47200")
        eq_(self.record.technical_contacts[0].fax, "+350.47271")
        eq_(self.record.technical_contacts[0].email, "tech@sapphire.gi")

    def test_updated_on(self):
        eq_(self.record.updated_on.__class__.__name__, 'datetime')
        eq_(self.record.updated_on, time_parse('2008-12-20 19:25:54 UTC'))

    def test_domain_id(self):
        eq_(self.record.domain_id, "D68296-LRCC")

    def test_expires_on(self):
        eq_(self.record.expires_on.__class__.__name__, 'datetime')
        eq_(self.record.expires_on, time_parse('2009-12-20 13:34:34 UTC'))

    def test_disclaimer(self):
        eq_(self.record.disclaimer, "Access to CCTLD WHOIS information is provided to assist persons in determining the contents of a domain name registration record in the Afilias registry database. The data in this record is provided by Afilias Limited for informational purposes only, and Afilias does not guarantee its accuracy.  This service is intended only for query-based access. You agree that you will use this data only for lawful purposes and that, under no circumstances will you use this data to: (a) allow, enable, or otherwise support the transmission by e-mail, telephone, or facsimile of mass unsolicited, commercial advertising or solicitations to entities other than the data recipient's own existing customers; or (b) enable high volume, automated, electronic processes that send queries or data to the systems of Registry Operator, a Registrar, or Afilias except as reasonably necessary to register domain names or modify existing registrations. All rights reserved. Afilias reserves the right to modify these terms at any time. By submitting this query, you agree to abide by this policy.")
